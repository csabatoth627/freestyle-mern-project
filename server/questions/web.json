
   [
    {
      "topic":"web",
      "question": "What is the difference between Real DOM and Virtual DOM?",
      "answer": "The Real DOM is the actual browser representation of the web page, while the Virtual DOM is a lightweight copy of the Real DOM used for efficient updates and rendering in frameworks like React. Changes made to the Virtual DOM are compared with the Real DOM and only the necessary updates are applied, resulting in improved performance and a smoother user experience."
    },
    {
      "topic":"web",
      "question": "When adding an item to an array, why is it necessary to pass a new array to the useState hook?",
      "answer": "When using the useState hook in React, passing a new array as the updated state ensures that React recognizes the state change and triggers a re-render. React relies on immutable data patterns to detect changes, so providing a new array helps create a distinct reference for the updated state, enabling React to efficiently track and update the component."
    },
    {
      "topic":"web",
      "question": "Describe what techniques or tools you use to debug a React app.",
      "answer": "To debug a React app, techniques and tools such as console logging and React DevTools are commonly used to track data flow, inspect components, and identify errors, while Chrome DevTools provides additional features like performance analysis and code debugging capabilities."
    },
    {
      "topic":"web",
      "question": "What is the difference between a React class component and a functional component?",
      "answer": "The difference between a React class component and a functional component is that class components are defined as ES6 classes, extend the React.Component class, and have built-in state and lifecycle methods, while functional components are defined as plain JavaScript functions and can manage state and lifecycle using hooks introduced in recent versions of React."
    },
    {
      "topic":"web",
      "question": "Name 3 lifecycle states in a React functional component.",
      "answer": "The three lifecycle states in a React functional component are mounting, updating, and unmounting."
    },
    {
      "topic":"web",
      "question": "What is conditional rendering in React? Give an example.",
      "answer": "Conditional rendering in React refers to the ability to render different components or elements based on certain conditions or variables. For example, using the if statement or ternary operator, you can conditionally render different components or display content based on the value of a variable, such as rendering a 'Login' button if the user is not logged in, and rendering a 'Logout' button if the user is logged in."
    },
    {
      "topic":"web",
      "question": "What is a database schema?",
      "answer": "A database schema defines the structure and organization of a database system, including tables, columns, relationships, and constraints. It serves as a blueprint that outlines the logical and physical representation of the database and defines how the data is organized and stored."
    },
    {
      "topic":"web",
      "question": "Why is the id unique in a database?",
      "answer": "In MongoDB and with the help of Mongoose, the _id field serves as the default unique identifier for documents in a collection, ensuring each document has a unique identity. The uniqueness of the _id field is crucial for maintaining data integrity and supporting efficient querying and indexing operations in MongoDB."
    },
    {
      "topic":"web",
      "question": "What are the advantages & disadvantages of using lean() function in a MongoDB query?",
      "answer": "Advantages of using the lean() function in a MongoDB query include improved query performance and reduced memory usage, while its disadvantages are limited functionality and the lack of automatic change tracking for the returned objects."
    },
    {
      "topic":"web",
      "question": "What is a database schema?",
      "answer": "A database schema defines the structure and organization of a database system, including tables, columns, relationships, and constraints. It serves as a blueprint that outlines the logical and physical representation of the database and defines how the data is organized and stored."
    },
    {
      "topic":"web",
      "question": "Why is the id unique in a database?",
      "answer": "In MongoDB and with the help of Mongoose, the _id field serves as the default unique identifier for documents in a collection, ensuring each document has a unique identity. The uniqueness of the _id field is crucial for maintaining data integrity and supporting efficient querying and indexing operations in MongoDB."
    },
    {
      "topic":"web",
      "question": "What are the advantages & disadvantages of using lean() function in a MongoDB query?",
      "answer": "Advantages of using the lean() function in a MongoDB query include improved query performance and reduced memory usage, while its disadvantages are limited functionality and the lack of automatic change tracking for the returned objects."
    },
    {
      "topic":"web",
      "question": "What is a callback function?",
      "answer": "A callback function is a function passed as an argument to another function and is invoked at a specific point or upon the occurrence of an event."
    },
    {
      "topic":"web",
      "question": "What is ECMA script? What is the difference between Javascript & ECMA script?",
      "answer": "ECMAScript (ES) is a standardized scripting language specification, and JavaScript is an implementation of the ECMAScript standard."
    },
    {
      "topic":"web",
      "question": "What is the difference between let & var?",
      "answer": "The difference between let and var is that let is block-scoped, while var is function-scoped."
    },
    {
      "topic":"web",
      "question": "What is a web server?",
      "answer": "A web server is software that serves web pages and resources to clients over the internet."
    },
    {
      "topic":"web",
      "question": "Explain the client-server architecture.",
      "answer": "Client-server architecture is a model where clients send requests to servers, which process the requests and provide responses."
    },
    {
      "topic":"web",
      "question": "What is the difference between synchronous and asynchronous execution?",
      "answer": "Synchronous execution is sequential and blocks subsequent tasks, while asynchronous execution allows concurrent and non-blocking tasks."
    },
    {
      "topic":"web",
      "question": "What is npm? Why is it useful?",
      "answer": "npm is Node Package Manager, used for installing, managing, and sharing JavaScript code packages."
    },
    {
      "topic":"web",
      "question": "What is the difference between the dependencies & devDependencies in a package.json file?",
      "answer": "Dependencies are required packages for the application in production, while devDependencies are only needed during development."
    },
    {
      "topic":"web",
      "question": "What would be the impact of JavaScript fetch if it was not asynchronous?",
      "answer": "If fetch in JavaScript was not asynchronous, it would block subsequent code execution, leading to an unresponsive user interface."
    },
    {
      "topic":"web",
      "question": "What benefits would using the Postman application bring to a developer?",
      "answer": "Postman brings benefits to developers by providing a user-friendly interface to create, send, and test HTTP requests to APIs."
    },
    {
      "topic":"web",
      "question": "List the parts of the URL.",
      "answer": "Parts of a URL include the scheme/protocol, domain/host, port, path, query parameters, and fragment/anchor."
    },
    {
      "topic":"web",
      "question": "What is a query parameter?",
      "answer": "A query parameter is additional data passed in a URL's query string, usually used for filtering or configuring requests."
    },
    {
      "topic":"web",
      "question": "What kind of HTTP status codes do you know?",
      "answer": "Some common HTTP status codes include 200 OK, 404 Not Found, and 500 Internal Server Error. HTTP status codes can be categorized into informational responses (100 – 199), successful responses (200 – 299), redirection messages (300 – 399), client error responses (400 – 499), and server error responses (500 – 599)."
    },
    {
      "topic":"web",
      "question": "How does an HTTP Request look like? What are the most relevant HTTP header fields?",
      "answer": "An HTTP Request consists of a request line, headers, and an optional body. The most relevant HTTP header fields include Content-Type, Authorization, and User-Agent."
    },
    {
      "topic":"web",
      "question": "How does an HTTP Response look like? What are the most relevant HTTP header fields?",
      "answer": "An HTTP Response consists of a response line, headers, and an optional body. The most relevant HTTP header fields include Content-Type, Content-Length, and Cache-Control."
    },
    {
      "topic":"web",
      "question": "Why should you ignore the node_modules folder in .gitignore?",
      "answer": "The node_modules folder is ignored in .gitignore to exclude it from version control, as it contains the dependencies that can be installed using npm and can be easily retrieved on a new machine by running npm install."
    },
    {
      "topic":"web",
      "question": "What does MERN stand for in the context of web development?",
      "answer": "MERN stands for MongoDB, Express, React, and Node, which are the four major technologies that make up the stack. It is a full-stack solution that follows the traditional three-tier architectural pattern, including the front-end display tier (React.js), application tier (Express.js and Node.js), and database tier (MongoDB). The MERN stack is designed to make the development process easier and smoother, and it is a user-friendly full-stack JavaScript framework for building applications and dynamic websites."
    },
    {
      "topic":"web",
      "question": "What is routing in the context of a React app?",
      "answer": "Routing is the process of navigating between different parts of a web application when a user clicks a link or enters a URL. In a React application, routing can be handled using third-party libraries like React Router. React Router is a declarative routing framework that allows developers to configure routes using standard React components. By configuring routes as components, developers can intuitively place them inside a component with other components serving as a template."
    },
    {
      "topic":"web",
      "question": "What is routing in the context of an Express app?",
      "answer": "In the context of an Express app, routing refers to the process of determining how the app responds to a client request to a particular path and a specific HTTP request method (e.g., GET, POST, etc.). To define routing methods, you use the app.METHOD(PATH, CALLBACK) function, where METHOD is the HTTP request method, PATH is the URL path, and CALLBACK is the function that gets invoked when the user navigates to that URL. You can also use app.route() and express.Router() to create modular, mountable route handlers to reduce redundancy and typos."
    },
    {
      "topic":"web",
      "question": "What is CORS policy?",
      "answer": "Cross-Origin Resource Sharing (CORS) is a mechanism that allows a server to indicate any origins other than its own from which a browser should permit loading resources. CORS is an HTTP-header based mechanism that relies on a mechanism by which browsers make a 'preflight' request to the server hosting the cross-origin resource to check that the server will permit the actual request. This mechanism supports secure cross-origin requests and data transfers between browsers and servers."
    },
    {
      "topic":"web",
      "question": "What advantages does a developer have for using Bootstrap or Material UI?",
      "answer": "Bootstrap is a good option for developers who want to create responsive web applications quickly and efficiently, while Material UI is a good option for those who want to follow Material guidelines and create a modern and stylish interface that will be unique."
    },
    {
      "topic":"web",
      "question": "Why is it recommended for a developer to use the HTTP methods GET, PUT, and DELETE?",
      "answer": "Using the HTTP methods GET, PUT, and DELETE is recommended for developers because they correspond to the read, update, and delete operations, respectively, and are the most commonly used methods in RESTful APIs. The GET method is used to retrieve data from a server at the specified resource. It's considered a safe and idempotent method since it only requests data and doesn't modify any resources. The PUT method is used to update an existing resource, while the DELETE method is used to delete the resource at the specified URL. Both the PUT and DELETE methods are not safe, but they are idempotent."
    },
    {
      "topic":"web",
      "question": "How does a POST request look like when it is made from a web browser (on the front end written)?",
      "answer": "When making a POST request from a web browser, you need to specify the method as POST in the request. The data to be sent in the request is included in the request body, which can be specified on the Content tab. You also need to specify the Content-Type for your POST data. When making a POST request, the server expects the data to be in a specific format, such as JSON or form data."
    },
    {
      "topic":"web",
      "question": "What is an API?",
      "answer": "An API (Application Programming Interface) is a set of rules and protocols that allows different software components to communicate with each other. APIs serve as intermediaries between systems and enable the sharing of data across organizations. APIs are widely used and can be found in rideshare apps, mobile payments, and thermostats, among many other applications. Modern APIs are designed to be self-described, developer-friendly and easily accessible, and they adhere to specific standards, typically HTTP and REST."
    },
    {
      "topic":"web",
      "question": "What is REST API?",
      "answer": "A REST API is a type of web API that follows the architectural principles of REST. REST is an acronym for Representational State Transfer, which is not a protocol or a standard, but rather a set of architectural constraints. When a client request is made via a RESTful API, it transfers a representation of the state of the resource to the requester or endpoint using HTTP."
    },
    {
      "topic":"web",
      "question": "What is JSON and how do we use it?",
      "answer": "JSON stands for JavaScript Object Notation, a lightweight format used for data interchange. It is based on a subset of JavaScript language and is used as an alternative to XML for transmitting data. JSON is built on two structures: a collection of name/value pairs and an ordered list of values."
    },
    {
      "topic":"web",
      "question": "What is API versioning?",
      "answer": "API versioning is the practice of managing changes to an API so that consumers know what to expect from it. It is a way to iterate faster when needed changes are identified in the APIs. Versioning is needed because changes in APIs are inevitable, and these changes can break existing client integration."
    },
    {
      "topic":"web",
      "question": "Give 3 examples of HTTP response status codes? Explain what each number means.",
      "answer": "200 OK: This status code means that the request was successful. The meaning of success depends on the request method used.\n\n404 Not Found: This status code means that the requested resource could not be found on the server. This could be due to a variety of reasons, such as a typo in the URL or the resource being deleted from the server.\n\n500 Internal Server Error: This status code means that there was an error on the server while processing the request."
    }
  ]

